name: "Multi-chip demo tests"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # This cron schedule runs the workflow every day at 12am UTC

jobs:
  multi-chip-unit-tests:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-group: [
          # N300 2x4
          {
            name: "T3000 end to end demo tests",
            arch: wormhole_b0,
            runs-on: ["perf-t3000", "arch-wormhole_b0", "multi-chip-num-pcie-4", "multi-chip-num-chips-8"],
            machine-type: "bare_metal",
            cmd: './tests/scripts/run_tests.sh --tt-arch wormhole_b0 --pipeline-type end_to_end_demos_multi_device --dispatch-mode ""'
          },
        ]
    name: ${{ matrix.test-group.name }} ${{ matrix.test-group.arch }}
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.test-group.arch }}
      CONFIG: ci
    environment: dev
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dyanmic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build tt-metal and libs
        run: |
          PYTHON_ENV_DIR=$(pwd)/build/python_env ./build_metal.sh
      - name: Build tt-metal CPP tests
        run: cmake --build build --target tests -- -j`nproc`
      - name: Run pre/post regression tests
        timeout-minutes: 180
        run: |
          source build/python_env/bin/activate
          export PYTHONPATH=$TT_METAL_HOME
          ${{ matrix.test-group.cmd }}
