name: "Build tt-metal artifacts"

on:
  workflow_call:
    inputs:
      arch:
        required: false
        type: string
        default: '["grayskull", "wormhole_b0"]'
  workflow_dispatch:
  
jobs:

  build-docker-images:
    strategy:
      matrix:
        arch: ${{ fromJson(inputs.arch || '["grayskull", "wormhole_b0", "blackhole"]') }}
        docker_image_tag: [ tt-metalium/ubuntu-20.04-amd64 ]
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.arch }}
    environment: dev
    runs-on: build-docker
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Update submodules
        run: |
          git submodule update --init --recursive
      - name: Execute in docker image
        uses: ./.github/actions/docker-run
        with:
          docker_username: ${{ github.actor }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          run_args: |
            cmake -B build -G Ninja -DCMAKE_CXX_COMPILER=clang++-17
            cmake --build build --target tests
            cmake --build build --target install
          docker_opts: |
            -e CONFIG=${{ env.CONFIG }} 
            -e ARCH_NAME=${{ matrix.arch }} 
      - name: 'Tar files'
        run: tar -cvf ttm_${{ matrix.arch }}.tar build/hw build/lib tt_eager/tt_lib/*.so ttnn/ttnn/*.so build/programming_examples build/test build/tools runtime
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.arch }}
          path: ttm_${{ matrix.arch }}.tar
          