name: "Multi-chip unit tests"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *" # This cron schedule runs the workflow every 3 hours

jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    with:
      arch: '["wormhole_b0"]'
    secrets: inherit

  multi-chip-unit-tests:
    needs: build-artifact
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-group: [
          # N300 2x4
          {
            name: "T3000 unit tests",
            arch: wormhole_b0,
            runs-on: ["wormhole_b0", "multi-chip-num-pcie-4", "multi-chip-num-chips-8"],
            cmd: './tests/scripts/run_tests.sh --tt-arch wormhole_b0 --pipeline-type post_commit_multi_device --dispatch-mode ""'
          },
          # {
          #   name: "T3000 unstable tests",
          #   arch: wormhole_b0,
          #   runs-on: ["wormhole_b0", "multi-chip-num-pcie-4", "multi-chip-num-chips-8"],
          #   cmd: './tests/scripts/run_tests.sh --tt-arch wormhole_b0 --pipeline-type post_commit_multi_device_unstable --dispatch-mode ""'
          # },
        ]
    name: ${{ matrix.test-group.name }} ${{ matrix.test-group.arch }}
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.test-group.arch }}
    environment: dev
    runs-on: ${{ matrix.test-group.runs-on }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.test-group.arch }}
      - name: Extract files
        run: tar -xvf ttm_${{ matrix.test-group.arch }}.tar
      - uses: ./.github/actions/install-python-deps
      - name: Run pre/post regression tests
        timeout-minutes: 120
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          export PYTHONPATH=$TT_METAL_HOME
          ${{ matrix.test-group.cmd }}
