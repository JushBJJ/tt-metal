name: "[internal] ttnn unit tests impl"

on:
  workflow_call:

jobs:
  ttnn:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-info: [
          # E150
          {arch: grayskull, runs-on: ["grayskull"], name: E150},
          # # N150
          {arch: wormhole_b0, runs-on: ["wormhole_b0", "multi-chip-num-pcie-1", "multi-chip-num-chips-1"], name: N150},
          # # N300
          {arch: wormhole_b0, runs-on: ["wormhole_b0", "multi-chip-num-pcie-1", "multi-chip-num-chips-2"], name: N300},
        ]
        test-group:
          - name: ttnn group 1
            cmd: pytest $TT_METAL_HOME/tests/ttnn/unit_tests -xv --splits 2 --group 1 -m "not disable_fast_runtime_mode"
          - name: ttnn group 2
            cmd: pytest $TT_METAL_HOME/tests/ttnn/unit_tests -xv --splits 2 --group 2 -m "not disable_fast_runtime_mode" && ./tests/scripts/run_ttnn_examples.sh
          - name: ttnn group 3
            cmd: pytest $TT_METAL_HOME/tests/ttnn/unit_tests -xv -m requires_fast_runtime_mode_off
            fast_runtime_mode_off: true
          - name: ttnn cpp tests
            cmd: ./build/test/ttnn/unit_tests_ttnn
    name: ${{ matrix.test-group.name }} ${{ matrix.runner-info.arch }} ${{ matrix.runner-info.name }}
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on: ${{ matrix.runner-info.runs-on }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.runner-info.arch }}
      - name: Extract files
        run: tar -xvf ttm_${{ matrix.runner-info.arch }}.tar
      - uses: ./.github/actions/install-python-deps
      - name: Set ttnn fast runtime if exists in config
        if: ${{ matrix.test-group.fast_runtime_mode_off }}
        run: |
          # For tests that tend to use entire grid
          echo "WH_ARCH_YAML=wormhole_b0_80_arch_eth_dispatch.yaml" >> $GITHUB_ENV
          echo "TTNN_CONFIG_OVERRIDES={\"enable_fast_runtime_mode\": false}" >> $GITHUB_ENV
      - name: ${{ matrix.test-group.name }} tests
        timeout-minutes: 45
        uses: ./.github/actions/docker-run
        with:
          docker_username: ${{ github.actor }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e CONFIG=${{ env.CONFIG }} 
            -e ARCH_NAME=${{ matrix.runner-info.arch }}
            -e LOGURU_LEVEL=${{ env.LOGURU_LEVEL }}
            -e LD_LIBRARY_PATH=${{ env.LD_LIBRARY_PATH }}
            -e TT_METAL_ENV=${{ env.TT_METAL_ENV }}
            --device /dev/tenstorrent
            -e WH_ARCH_YAML=${WH_ARCH_YAML}
            -e TTNN_CONFIG_OVERRIDES=${TTNN_CONFIG_OVERRIDES}
          run_args: |
            source ${{ github.workspace }}/python_env/bin/activate 
            ${{ matrix.test-group.cmd }}
      # - uses: ./.github/actions/slack-report
      #   if: ${{ failure() }}
      #   with:
      #     slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     owner: U0593J2RQRZ # Bill Teng
